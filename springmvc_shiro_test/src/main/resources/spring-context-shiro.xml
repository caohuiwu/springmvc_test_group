<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

    <!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- 登录页面 -->
        <property name="loginUrl" value="/views/login"/>
        <!-- 登录成功后的页面 -->
        <property name="successUrl" value="views/index"/>
        <!-- 非法访问跳转的页面 -->
        <property name="unauthorizedUrl" value="/403"/>
        <!-- 权限配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 无需认证即可访问的静态资源，还可以添加其他 url -->
                /static/** = anon
                <!-- 除了上述忽略的资源，其他所有资源都需要认证后才能访问 -->
                /** = authc
            </value>
        </property>
    </bean>

    <!-- 定义连接到后端安全数据源的 Realm : -->
    <bean id="myRealm" class="chw.test.security.MyRealm">

    </bean>

    <bean id="securityManager" class="org.apache.shiro.mgt.DefaultSecurityManager">
        <!-- 单一 Realm 应用这样写。如果有多个 Realm ，可以使用 "realms" 属性 -->
        <property name="realm" ref="myRealm"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 对于最简单的集成方式，就像所有的 SecurityUtils 中的静态
    方法一样，在所有情况下都适用，将 securityManager bean 声明
    为一个静态的单例对象。但不要在 web 应用程序中这样做。参见
    下面的 “web 应用程序” 部分。  -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

</beans>